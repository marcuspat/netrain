# <type>(<scope>): <subject>
#
# <body>
#
# <footer>
#
# Type must be one of the following:
# - feat: A new feature
# - fix: A bug fix
# - docs: Documentation only changes
# - style: Changes that do not affect the meaning of the code
# - refactor: A code change that neither fixes a bug nor adds a feature
# - perf: A code change that improves performance
# - test: Adding missing tests or correcting existing tests
# - build: Changes that affect the build system or external dependencies
# - ci: Changes to our CI configuration files and scripts
# - chore: Other changes that don't modify src or test files
# - revert: Reverts a previous commit
#
# Scope is optional and can be anything specifying the place of the commit change.
# Examples: packet, threat-detection, ui, ci, deps
#
# Subject should be no greater than 50 characters, should not end with a period
# and should use an imperative tone.
#
# Body should include the motivation for the change and contrast this with previous
# behavior. Use the body to explain the what and why vs. the how.
#
# Footer should contain any information about Breaking Changes and is also
# the place to reference GitHub issues that this commit closes.
#
# Breaking Changes should start with the word BREAKING CHANGE: with a space or
# two newlines. The rest of the commit message is then used for this.
#
# Example:
# feat(packet): add support for IPv6 packet analysis
#
# Implement IPv6 packet parsing and analysis capabilities. This includes
# support for common IPv6 headers and extension headers.
#
# Closes #123